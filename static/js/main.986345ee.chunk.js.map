{"version":3,"sources":["firebase.js","components/post/post.jsx","components/imageUpload/imageUpload.jsx","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postId","username","caption","imageURL","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","onSnaphshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","add","timestamp","FieldValue","serverTimestamp","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","setUsername","password","setPassword","email","setEmail","user","setUser","onAuthStateChanged","authUser","displayName","updateProfile","orderBy","onSnapshot","id","post","Modal","onClose","style","Input","preventDefault","createUserWithEmailAndPassword","catch","signInWithEmailAndPassword","signOut","postID","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.986345ee.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyAhOjpG45aKliUa_n_lJWyLc2NyhWm3P84\",\r\n  authDomain: \"react-social-network-322fb.firebaseapp.com\",\r\n  projectId: \"react-social-network-322fb\",\r\n  storageBucket: \"react-social-network-322fb.appspot.com\",\r\n  messagingSenderId: \"690571250637\",\r\n  appId: \"1:690571250637:web:43b1a812a7dfbb40de5284\",\r\n  measurementId: \"G-WPF8SJT06K\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n// const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, storage };\r\n","import React, {useState, useEffect} from 'react';\r\nimport \"./post.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {db} from '../../firebase';\r\n\r\nfunction Post({postId, username, caption, imageURL}) {\r\n   const [comments, setComments] = useState([]);\r\n   const [comment, setComment] =useState([]);\r\n\r\n   useEffect(() => {\r\n     let unsubscribe;\r\n     if (postId) {\r\n       unsubscribe = db\r\n       .collection(\"posts\")\r\n       .doc(postId)\r\n       .collection(\"comments\")\r\n       .onSnaphshot((snapshot) => {\r\n         setComments(snapshot.docs.map((doc) => doc.data()));\r\n       });\r\n    }\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n   }, [postId]);\r\n\r\n   // Post function for comment posting\r\n   const postComment = (event) => {\r\n\r\n   }\r\n\r\n  return (\r\n    <div className=\"post\">\r\n        {/* header  -> avatar & username */}\r\n      <div className=\"post_header\">\r\n        {\" \"}\r\n        <Avatar\r\n          className=\"post_avatar\"\r\n          alt=\"User\"\r\n          src=\"/static/images/avatar/1.jpg\"\r\n        />\r\n        <h3>{username}</h3>\r\n      \r\n      </div>\r\n {/* image */}n\r\n      <img\r\n        className=\"post_image\"\r\n        src={imageURL}\r\n      />\r\n     {/* username & caption */}\r\n      <h4 className=\"post_text\">\r\n        <strong>{username}</strong> {caption}\r\n      </h4>\r\n\r\n      \r\n        <div className=\"post__comments\">\r\n          {comments.map((comment) => (\r\n            <p>\r\n              <b>{comment.username}</b>{comment.text}\r\n            </p>\r\n          ))}\r\n      </div>\r\n      \r\n      <form className=\"post__commentBox\">\r\n        <input className=\"post__input\"\r\n        type=\"text\"\r\n        placeholder=\"Add A Comment...\"\r\n        value={comment}\r\n        onChange={(e) => setComment(e.target.value)}\r\n        />\r\n\r\n        <button className=\"post__button\"\r\n        disabled={!comment}\r\n        type=\"submit\"\r\n        onClick={postComment}>\r\n          Post\r\n        </button>\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React, {useState} from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport {storage, db} from '../../firebase';\r\nimport { Children } from 'react';\r\nimport firebase from 'firebase';\r\nimport './imageUpload.css'\r\n\r\nfunction ImageUpload({username}) {\r\nconst [caption, setCaption] = useState('');\r\nconst [url, setUrl] =useState('');\r\nconst [image, setImage] =useState(null);\r\n\r\n\r\n// progress bar\r\nconst [progress, setProgress] = useState(0);\r\n\r\n\r\n// File picker\r\nconst handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n        setImage(e.target.files[0])\r\n    }\r\n};\r\n\r\nconst handleUpload = () => {\r\nconst uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n// Progress Bar\r\nuploadTask.on(\r\n    \"state_changed\", (snapshot) => {\r\n    // progress function sets from 0 - 100 throwing a visual representation.\r\n    const progress = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        )\r\n        setProgress(progress);\r\n},\r\n(error) => {\r\n    // Error function throws an error alert if upload is not working.\r\n    console.log(error);\r\n    alert(error.message);\r\n},\r\n() => {\r\n    // upload complete function indicates when download is complete.\r\nstorage.ref('images')\r\n.child(image.name)\r\n// returns download link\r\n.getDownloadURL()\r\n.then(url => {\r\n    // post image inside database\r\n    db.collection(\"posts\").add({\r\n       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n       caption: caption,\r\n       imageURL: url,\r\n       username: username\r\n    });\r\n    \r\n    // Resets progress settings back to 0 and default settings.\r\n    setProgress(0);\r\n    setCaption(\"\");\r\n    setImage(null);\r\n})\r\n}\r\n)\r\n}\r\n    \r\nreturn (\r\n    <div className=\"imageUpload\">\r\n             <h1>Image Upload Render</h1>\r\n             {/*We need: */}\r\n      {/* Caption Input */}\r\n      {/* File Picker*/}\r\n      {/* 'Post' Button */}\r\n      {/* puts Max progress to 100 */}\r\n      <progress className=\"imageUpload__progress\" value={progress} max=\"100\"/>\r\n      <input type='text' placeholder='enter caption...' onChange={event => setCaption(event.target.value)} value={caption}/>\r\n      <input type='file' onChange={handleChange}/>\r\n\r\n      {/* Upload Button */}\r\n      <Button onClick={handleUpload}>Upload</Button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./App.css\";\r\nimport Post from \"./components/post/post.jsx\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { Button, Input } from \"@material-ui/core\";\r\nimport ImageUpload from \"../src/components/imageUpload/imageUpload\";\r\nimport InstagramEmbed from \"react-instagram-embed\";\r\n\r\n// Styles Modal\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  // Gets Modal style\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // Open state for when Modal is open\r\n  const [open, setOpen] = useState(false);\r\n  const [openSignIn, setOpenSignIn] = useState(false);\r\n\r\n  // States for Sign Up\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // backend listener for responses on the front end\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        // user has logged in\r\n        console.log(authUser);\r\n        setUser(authUser);\r\n\r\n        if (authUser.displayName) {\r\n        } else {\r\n          // if we just created someone\r\n          return authUser.updateProfile({ displayName: username });\r\n        }\r\n        // don't update username\r\n      } else {\r\n        setUser(null);\r\n        // user has logged out\r\n      }\r\n    });\r\n    return () => {\r\n      // performs cleanup actions\r\n      unsubscribe();\r\n    };\r\n  }, [user, username]);\r\n\r\n  // useEffect runs a piece of code based on a specific condition.\r\n  useEffect(() => {\r\n    // code runs here!\r\n    // orders placement of photos based on timestamp in descending order.\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() }))\r\n        );\r\n      });\r\n    // every new posts made, snapshot will send it straight to db as soon as photo is taken.\r\n    // real timne connection to firebase. will update live for updated or new posts.\r\n  }, []);\r\n\r\n  // Handles sign up event.\r\n  const signUp = (event) => {\r\n    // prevents unwanted refresh when signing up\r\n    event.preventDefault();\r\n\r\n    // creates user using email and password from state.\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    // Modal closes once user is signed up\r\n    setOpen(false);\r\n  };\r\n\r\n  // Sign In function\r\n  const signIn = (event) => {\r\n    event.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n\r\n    // Modal Closes once user signs in\r\n    setOpenSignIn(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app_signUp\">\r\n            <center>\r\n              {/* Instagram logo Placeholder until I get a real logo*/}\r\n              <img\r\n                className=\"app_headerImage\"\r\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\"\r\n                alt=\"logo\"\r\n              />\r\n            </center>\r\n            <Input\r\n              placeholder=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button type=\"submit\" onClick={signUp}>\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      {/* Sign In Modal */}\r\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app_signUp\">\r\n            <center>\r\n              {/* Instagram logo Placeholder until I get a real logo*/}\r\n              <img\r\n                className=\"app_headerImage\"\r\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\"\r\n                alt=\"logo\"\r\n              />\r\n\r\n              <Input\r\n                placeholder=\"email\"\r\n                type=\"text\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <Input\r\n                placeholder=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button type=\"submit\" onClick={signIn}>\r\n                Login\r\n              </Button>\r\n            </center>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <div className=\"app_header\">\r\n        {/* Instagram logo Placeholder until I get a real logo*/}\r\n        <img\r\n          className=\"app__headerImage\"\r\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\"\r\n          alt=\"logo\"\r\n        />\r\n        {user ? (\r\n          // Logout Btn\r\n          <Button onClick={() => auth.signOut()}>Logout</Button>\r\n        ) : (\r\n          <div className=\"app_loginContainer\">\r\n            <Button onClick={() => setOpenSignIn(true)}>Login</Button>\r\n            <Button onClick={() => setOpen(true)}>Sign Up</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <h1>Social Media Testing</h1>\r\n\r\n      <div className=\"app__posts\">\r\n        <div className=\"app__postsLeft\">\r\n          {/* goes through posts hooks and returns the individual bits of information */}\r\n          {posts.map(({ id, post }) => (\r\n            <Post\r\n              key={id}\r\n              postID={id}\r\n              username={post.username}\r\n              caption={post.caption}\r\n              imageURL={post.imageURL}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"app_postsRight\">\r\n          {/* InstagramEmbed to embed on the right */}\r\n          <InstagramEmbed\r\n            url=\"https://instagr.am/p/Zw9o4/\"\r\n            maxWidth={320}\r\n            hideCaption={false}\r\n            containerTagName=\"div\"\r\n            protocol=\"\"\r\n            injectScript\r\n            onLoading={() => {}}\r\n            onSuccess={() => {}}\r\n            onAfterRender={() => {}}\r\n            onFailure={() => {}}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* alerts users that they must be signed in to upload post */}\r\n      {/* ? is an optional that works around user.displayName being undefined */}\r\n      {user?.displayName ? (\r\n        <ImageUpload username={user.displayName} />\r\n      ) : (\r\n        <h3>Please Login to Upload</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}